import { Session } from '@supabase/supabase-js';
import { Slot, useRouter, useSegments } from 'expo-router';
import React, { useEffect, useState } from 'react';
import { ActivityIndicator, View } from 'react-native';
import { supabase } from '../supabaseClient';

// =================================================================
// 1. IMPORTE O AlertProvider DO SEU NOVO ARQUIVO DE CONTEXTO
import { AlertProvider } from '../contexts/AlertContext';
// =================================================================

export default function RootLayout() {
  const [session, setSession] = useState<Session | null>(null);
  const [loading, setLoading] = useState(true);
  const segments = useSegments();
  const router = useRouter();

  useEffect(() => {
    supabase.auth.getSession().then(({ data: { session } }) => {
      setSession(session);
      setLoading(false);
    });

    const { data: { subscription } } = supabase.auth.onAuthStateChange((_event, session) => {
      setSession(session);
    });

    return () => subscription.unsubscribe();
  }, []);

  useEffect(() => {
    if (loading) return;

    const inTabsGroup = segments[0] === '(tabs)';

    if (session && !inTabsGroup) {
      router.replace('/(tabs)/agenda'); 
    } else if (!session && segments[0] !== '(auth)') {
      router.replace('/(auth)/login');
    }
  }, [session, loading, segments]);

  if (loading) {
    return (
      <View style={{ flex: 1, justifyContent: 'center', backgroundColor: '#121212' }}>
        <ActivityIndicator size="large" color="#E50914" />
      </View>
    );
  }
  
  // =================================================================
  // 2. ENVOLVA O <Slot /> COM O <AlertProvider>
  //    Isso garante que o sistema de alertas esteja dispon√≠vel
  //    em todas as telas do seu aplicativo.
  return (
    <AlertProvider>
      <Slot />
    </AlertProvider>
  );
  // =================================================================
}
