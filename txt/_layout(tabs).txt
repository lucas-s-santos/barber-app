import { Ionicons } from '@expo/vector-icons';
import { Tabs } from 'expo-router';
import React, { useCallback, useEffect, useState } from 'react';
import { ActivityIndicator, View } from 'react-native';
import { supabase } from '../../supabaseClient';

type UserRole = 'cliente' | 'barbeiro' | null;

export default function TabsLayout() {
  const [loading, setLoading] = useState<boolean>(true);
  const [userRole, setUserRole] = useState<UserRole>(null);

  const fetchAndSetUserRole = useCallback(async () => {
    setLoading(true); 
    const { data: { user } } = await supabase.auth.getUser();
    if (user) {
      const { data: profile } = await supabase
        .from('perfis')
        .select('papel')
        .eq('id', user.id)
        .single();
      setUserRole(profile ? profile.papel as UserRole : null);
    } else {
      setUserRole(null);
    }
    setLoading(false);
  }, []);

  useEffect(() => {
    fetchAndSetUserRole();
    const { data: { subscription } } = supabase.auth.onAuthStateChange((event, session) => {
      fetchAndSetUserRole();
    });
    return () => {
      subscription?.unsubscribe();
    };
  }, [fetchAndSetUserRole]);

  const screenOptions = {
    headerShown: false,
    tabBarStyle: { 
      backgroundColor: '#1E1E1E', 
      borderTopColor: '#333',
      height: 60,
      paddingBottom: 5,
    },
    tabBarActiveTintColor: '#E50914',
    tabBarInactiveTintColor: 'gray',
  };

  if (loading) {
    return (
      <View style={{ flex: 1, justifyContent: 'center', backgroundColor: '#121212' }}>
        <ActivityIndicator size="large" color="#E50914" />
      </View>
    );
  }

  return (
    <Tabs screenOptions={screenOptions}>
      {userRole === 'barbeiro' ? (
        <>
          <Tabs.Screen 
            name="painel" 
            options={{ title: 'Painel', tabBarIcon: ({ color, size }) => <Ionicons name="grid-outline" color={color} size={size} /> }} 
          />
          <Tabs.Screen name="agenda" options={{ href: null }} />
        </>
      ) : (
        <>
          <Tabs.Screen 
            name="agenda" 
            options={{ title: 'Agenda', tabBarIcon: ({ color, size }) => <Ionicons name="calendar-outline" color={color} size={size} /> }} 
          />
          <Tabs.Screen name="painel" options={{ href: null }} />
        </>
      )}

      <Tabs.Screen 
        name="servicos" 
        options={{ title: 'ServiÃ§os', tabBarIcon: ({ color, size }) => <Ionicons name="cut-outline" color={color} size={size} /> }} 
      />
      <Tabs.Screen 
        name="perfil" 
        options={{ title: 'Perfil', tabBarIcon: ({ color, size }) => <Ionicons name="person-outline" color={color} size={size} /> }} 
      />
      
      {/* --- TELAS OCULTAS --- */}
      <Tabs.Screen name="meus-agendamentos" options={{ href: null }} />
      <Tabs.Screen name="historico-agendamentos" options={{ href: null }} />
      <Tabs.Screen name="editar-perfil" options={{ href: null }} />
      <Tabs.Screen name="gerenciar-servicos" options={{ href: null }} />
      <Tabs.Screen name="configurar-horarios" options={{ href: null }} />
    </Tabs>
  );
}
